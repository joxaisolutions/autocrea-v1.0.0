name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Install frontend dependencies
        run: cd frontend && npm ci

      - name: Install backend dependencies
        run: cd backend && npm ci

      - name: Lint frontend
        run: cd frontend && npm run lint

      - name: Lint backend
        run: cd backend && npm run lint

      - name: Type check frontend
        run: cd frontend && npm run type-check

      - name: Type check backend
        run: cd backend && npm run type-check

  test-frontend:
    name: Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Run tests
        run: cd frontend && npm test

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: cd backend && npm ci

      - name: Run tests
        run: cd backend && npm test

  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest
    needs: [lint-and-type-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: cd frontend && npm ci

      - name: Build
        run: cd frontend && npm run build
        env:
          NEXT_PUBLIC_APP_NAME: AUTOCREA
          NEXT_PUBLIC_APP_VERSION: 1.0.0

  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest
    needs: [lint-and-type-check]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: cd backend && npm ci

      - name: Build
        run: cd backend && npm run build

  # Docker Build Test
  docker-build:
    name: Docker - Build Test
    runs-on: ubuntu-latest
    needs: [build-backend]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: autocrea-backend:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Security Audit
  security-audit:
    name: Security - Dependency Audit
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run npm audit (Frontend)
        working-directory: ./frontend
        run: npm audit --audit-level=high
        continue-on-error: true

      - name: Run npm audit (Backend)
        working-directory: ./backend
        run: npm audit --audit-level=high
        continue-on-error: true

  # Deploy to Railway (Production only)
  deploy-backend:
    name: Deploy Backend to Railway
    runs-on: ubuntu-latest
    needs: [test-backend, build-backend, docker-build]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy to Railway
        run: railway up --service backend
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
